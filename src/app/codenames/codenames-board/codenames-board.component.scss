@import './../../../variables';

@mixin darken-on-states($color) {
    &:active:not(.locked),
    &:focus:not(.locked),
    &:hover:not(.locked) {
        background-color: darken($color, 5%);
    }
}

.toggle-container {
    float: left;

    .key-board-toggle {
        font-family: $font;
        text-transform: uppercase;
        font-size: 2rem;
        margin-left: 25px;
        margin-top: 10px;
        padding: 15px 30px;
        background-color: $gold;
        box-shadow: 0 5px 6px -3px rgba(0, 0, 0, 0.2), 0 9px 12px 1px rgba(0, 0, 0, 0.14), 0 3px 16px 2px rgba(0, 0, 0, 0.12);
    }
}

.game-id {
    color: white;
    font-size: 3rem;
    text-align: right;
    padding-top: 15px;
    padding-right: 30px;
}

.card {
    font-family: $font;
    text-transform: uppercase;
    font-size: 4rem;
    height: calc(100% - 96px);
    width: calc(100% - 96px);
    user-select: none;
    background-color: $white;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 5px 6px -3px rgba(0, 0, 0, 0.2), 0 9px 12px 1px rgba(0, 0, 0, 0.14), 0 3px 16px 2px rgba(0, 0, 0, 0.12);

    &.red {
        background-color: $red;

        @include darken-on-states($red);
    }

    &.blue {
        background-color: $blue;

        @include darken-on-states($blue);
    }

    &.black {
        background-color: $black;

        @include darken-on-states($black);
    }

    &.tan {
        background-color: $tan;

        @include darken-on-states($tan);
    }

    .reveal {
        position: absolute;
        bottom: 10px;
        right: 10px;
        height: 50px;
        width: 50px;
        visibility: hidden;
        color: $green;

        svg {
            height: 40px;
            width: 40px;
        }
    }

    &:active,
    &:focus,
    &:hover {
        .reveal {
            visibility: visible;
        }

        &:not(.locked) {
            cursor: pointer;
            background-color: darken($white, 5%);
        }
    }
}

@mixin key-revealed-card($outline-offset, $color) {
    background-color: lighten($color, 25%);

    &.locked {
        background-color: $color;
        outline: $outline-offset solid darken($color, 25%);
        outline-offset: -$outline-offset;
    }
}

.key {
    $locked-outline-width: 15px;

    &.red {
        @include key-revealed-card($locked-outline-width, $red);
    }

    &.blue {
        @include key-revealed-card($locked-outline-width, $blue);
    }

    &.black {
        @include key-revealed-card($locked-outline-width, $black);
    }

    &.tan {
        @include key-revealed-card($locked-outline-width, $tan);
    }
}

@media only screen and (max-width: 1600px) {
    .card {
        font-size: 3.5rem;
        height: calc(100% - 72px);
        width: calc(100% - 72px);
    }
}

@media only screen and (max-width: 1200px) {
    .card {
        font-size: 2.5rem;
    }
}

@media only screen and (max-width: 1000px) {
    .card {
        font-size: 2rem;
    }
}

@media only screen and (max-width: 800px) {
    .card {
        font-size: 1.5rem;
    }
}
